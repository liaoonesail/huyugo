<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"

	xmlns:context="http://www.springframework.org/schema/context"

	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"

	xmlns:p="http://www.springframework.org/schema/p"

	xsi:schemaLocation="http://www.springframework.org/schema/beans

                http://www.springframework.org/schema/beans/spring-beans-3.1.xsd

                http://www.springframework.org/schema/mvc

                http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd

                http://www.springframework.org/schema/context

                http://www.springframework.org/schema/context/spring-context-3.1.xsd

                http://www.springframework.org/schema/aop

                http://www.springframework.org/schema/aop/spring-aop-3.1.xsd

                http://www.springframework.org/schema/tx

                http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">


	<context:component-scan
		base-package="com.huyu.pay.service,com.huyu.controller,com.huyu.action,com.huyu.service,com.huyu.dao,com.huyu.threadDay" />
	<aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/> <!--切入同类调用方法-->
	<bean

		class="org.springframework.web.servlet.view.InternalResourceViewResolver"

		p:viewClass="org.springframework.web.servlet.view.JstlView" p:prefix="/"
		p:suffix=".jsp">
	</bean>
	<bean  id ="applicationContextUtil"  class ="com.huyu.threadDay.ApplicationContextUtil" ></bean >
	<!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />


	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 队列中的最小等待数 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 队列中的最大等待数 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 最长等待时间，单位毫秒 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
		<!-- 最大活跃数 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <bean id="sqlSessionFactory" class="com.util.BeanFactory"> -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1MB -->
		<property name="maxUploadSize">
			<value>99991048576</value>
		</property>
	</bean>
	<!--<bean id="timeDitail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="fazhanSystem"></property>&lt;!&ndash; 指定任务类 &ndash;&gt;
		<property name="targetMethod" value="FazhanSystem"></property>&lt;!&ndash; 指定任务方法 &ndash;&gt;
	</bean>
	&lt;!&ndash; 定义时间间隔触发器 &ndash;&gt;
	<bean id="timeTigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="timeDitail"></property>
		<property name="cronExpression">
			<value>0 46 21 * * ?</value>
		</property>
	</bean>
	<bean id="startJob" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="timeTigger"/>
			</list>
		</property>
	</bean>-->
</beans>
